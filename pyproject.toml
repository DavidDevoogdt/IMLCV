
[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"



[tool.poetry]
name = "imlcv"
version = "0.1.0"
description = ""
authors = ["David Devoogdt <david.devoogdt@gmail.com>"]
license = "MIT"
readme = "README.MD"

documentation = "https://imlcv.readthedocs.io/en/main/"
repository = "https://github.com/DavidDevoogdt/IMLCV"




packages = [
    { include = "IMLCV" },
    { include = "configs/*" },
    { include = "examples/*" },
]


[tool.poetry.dependencies]
python = "^3.7"

jax = "*"
numpy = "*"
parsl = "*"
keras = "*"
# yaff = {git = "https://github.com/molmod/yaff.git" }
cloudpickle = "*"
matplotlib = "*"
molmod = "*"
scipy = "*"
jax_dataclasses = "*"
optax = "*"
flax = "*"
umap-learn = "*"
h5py = "*"
numba = "*"
shapely = "*"
alphashape = "*"
ase = "*"
scikit-learn = "*"
nyx = "*"
filelock = "*"
distrax = "*"
jaxopt = "*"
ott-jax = "*"
pymanopt = "^2.1.1"
thermolib = {git = "https://github.ugent.be/lvduyfhu/ThermoLIB", branch = "david"}
netket = "*"

tensorflow = { version = "*", optional = true }
tensorrt = { version = "*", optional = true }
# [tool.poetry.group.test.dependencies]

pytest = { version = "*", optional = true }
pytest-cov ={version = "*", optional = true }
mpi4py ={ version = "*", optional = true }
# zipfile ={ version = "*", optional = true }

mypy = { version = "*", optional = true }
black = { version = "*", optional = true }
isort = { version = "*", optional = true }
flake8 = { version = "*", optional = true }
shed = { version = "*", optional = true }

sphinx = { version = "*", optional = true }
sphinx-book-theme = { version = "*", optional = true }
sphinx_design = { version = "*", optional = true }
sphinx-autoapi = { version = "*", optional = true }
sphinx-autodoc-typehints = { version = "*", optional = true }
myst-parser = { version = "*", optional = true }


[tool.poetry.extras]

test = [ "pytest","pytest-cov","mpi4py"  ] 
docs = [ "sphinx", "sphinx-book-theme", "sphinx_design", "sphinx-autoapi", "sphinx-autodoc-typehints", "myst-parser" ]
lint = [ "mypy", "black", "isort", "flake8", "shed" ]
tensorflow = [ "tensorflow","tensorrt" ]

[tool.pytest.ini_options]
filterwarnings = [
    "ignore",
    "default:::mymodule",
]

[tool.dephell.main]
from = {format = "poetry", path = "pyproject.toml"}
to = {format = "setuppy", path = "setup.py"}